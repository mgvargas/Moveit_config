<launch>
 <!-- ======== START moveit_planning_execution.launch ======== -->
 <!-- From the moveit_planning_execution.launch, added: -->
 <rosparam command="load" file="$(find boxy_moveit_config)/config/joint_names.yaml"/>

 <!-- the "sim" argument controls whether we connect to a Simulated or Real robot -->
 <!--  - if sim=false, a robot_ip argument is required -->
 <arg name="sim" default="false" />
 <!-- ========= END moveit_planning_execution.launch ========= -->

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <!-- ************* CHANGE THIS PARAM TO FALSE WHEN BOXY IS ALREADY UP ************* -->
  <!-- NOTE!!!! also change map to base_footprint in kinect_controller.py -->
  <arg name="bring_up_robot" default="false" /> <!-- Do I have to bring up everything? -->
  <group if="$(arg bring_up_robot)">
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
    <include file="$(find iai_boxy_bringup)/launch/boxy_ur3_test.launch"/>
  </group>

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find boxy_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
    <arg name="bring_up_robot" value="$(arg bring_up_robot)"/>
  </include>

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find boxy_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg unless="$(arg sim)" name="fake_execution" value="false"/>
    <arg     if="$(arg sim)" name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- ======== START moveit_planning_execution.launch ======== -->
  <!-- run the robot simulator and action interface nodes -->
  <group if="$(arg sim)">
    <include file="$(find industrial_robot_simulator)/launch/robot_interface_simulator.launch" />
  </group>

  <!-- If needed, broadcast static tf for robot root -->
  <group if="$(arg bring_up_robot)">
    <node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 world base_footprint 100" />
  </group>
  <!--<group unless="$(arg bring_up_robot)">
    <node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 map base_footprint 100" />
  </group>-->

  <node name="move_group_planner" 
        pkg="boxy_moveit_config"
        type="kinect_planner.py"
        respawn="false"
        output="screen">
  </node>
  
  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <!--
  <include file="$(find boxy_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>
  -->
 
  <!-- test for moving the neck such that the kinect points towards a point in map --> 
  <!--
  <node name="move_group_controller" pkg="boxy_moveit_config" type="kinect_controller.py" respawn="false" output="screen"/>
  -->

</launch>
